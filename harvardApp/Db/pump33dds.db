## % macro, P, Device prefix
## % macro, Q, Device suffix
## % macro, PORT, Asyn port name
## % macro, DISABLE, Set to 0 to enable this at startup
## % macro, name, object and gui association name
## % gui, $(name=), edmembed, harvardSyringe_embed.edl, device=$(P)$(Q)
## % gui, $(name=), edm, harvardSyringe.edl, device=$(P)$(Q)
#
## This associates a BOY screen with the template
## % gui, $(name=), boydetail, harvardSyringeApp_opi/harvardSyringe_detail.opi, P=$(P),Q=$(Q),desc=Harvard Syringe Pump
## % gui, $(name=), boyembed, harvardSyringeApp_opi/harvardSyringe_embed_box.opi, P=$(P),Q=$(Q),desc=Harvard Syringe Pump
## % gui, $(name=), boyembed, harvardSyringeApp_opi/harvardSyringe_embed.opi, P=$(P),Q=$(Q),desc=Harvard Syringe Pump
## These define what PVs the detail screen should contain
## % gui, $(name=), enum, Enable,   $(P)$(Q):DISABLE
## % gui, $(name=), demand, Force,   $(P)$(Q):FORCE
## % gui, $(name=), readback, Force,   $(P)$(Q):FORCE:RBV
## % gui, $(name=), demand, Target Time,   $(P)$(Q):TTIME
## % gui, $(name=), readback, Target Time,   $(P)$(Q):TTIME:RBV
## % gui, $(name=), enum, Infuse Rate Units,   $(P)$(Q):IRATEUNITS
## % gui, $(name=), readback, Infuse Rate Units,   $(P)$(Q):IRATEUNITS:RBV
## % gui, $(name=), demand, Infuse Rate,   $(P)$(Q):IRATE
## % gui, $(name=), readback, Infuse Rate,   $(P)$(Q):IRATE:RBV
## % gui, $(name=), enum, Withdraw Rate Units,   $(P)$(Q):WRATEUNITS
## % gui, $(name=), readback, Withdraw Rate Units,   $(P)$(Q):WRATEUNITS:RBV
## % gui, $(name=), demand, Withdraw Rate,   $(P)$(Q):WRATE
## % gui, $(name=), readback, Withdraw Rate,   $(P)$(Q):WRATE:RBV
## % gui, $(name=), readback, Infused Volume,   $(P)$(Q):IVOLUME:RBV
## % gui, $(name=), readback, Infused Volume Units,   $(P)$(Q):IVOLUMEUNITS:RBV
## % gui, $(name=), command, Infused Volume Clear,   $(P)$(Q):CLEARINFUSED
## % gui, $(name=), readback, Withdrawn Volume,   $(P)$(Q):WVOLUME:RBV
## % gui, $(name=), readback, Withdrawn Volume Units,   $(P)$(Q):WVOLUMEUNITS:RBV
## % gui, $(name=), command, Withdrawn Volume Clear,   $(P)$(Q):CLEARWITHDRAWN
## % gui, $(name=), enum, Target Volume Units,   $(P)$(Q):TVOLUMEUNITS
## % gui, $(name=), readback, Target Volume Units,   $(P)$(Q):TVOLUMEUNITS:RBV
## % gui, $(name=), demand, Target Volume,   $(P)$(Q):TVOLUME
## % gui, $(name=), readback, Target Volume,   $(P)$(Q):TVOLUME:RBV
## % gui, $(name=), enum, Update,   $(P)$(Q):UPDATE.SCAN
## % gui, $(name=), command, Infuse,   $(P)$(Q):IRUN
## % gui, $(name=), command, Withdraw,   $(P)$(Q):WRUN
## % gui, $(name=), command, Stop,   $(P)$(Q):STOP
## % gui, $(name=), readback, Status,   $(P)$(Q):STATUS
#
#======================================================
#
# POLL
#
record(ao, "$(P)$(Q):POLLON") {
  field(DESC, "Set Polling")
  field(DTYP, "stream")
  field(OUT, "@pump33dds.proto setPollOn($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
  field(PINI, "YES")
}

record(bo, "$(P)$(Q):DISABLE") {
  field(DESC, "Disable comms")
  field(PINI, "YES")
  field(VAL, "$(DISABLE=1)")
  field(OMSL, "supervisory")
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
  field(FLNK, "$(P)$(Q):POLLON")  
}
#
#======================================================
#
# UPDATE
#
record(seq, "$(P)$(Q):UPDATE") {
  field(DESC, "Update Temp Params")
  field(DOL1, "1")
  field(DOL2, "1")
  field(LNK1, "$(P)$(Q)AXIS-A:UPDATE.PROC")
  field(LNK1, "$(P)$(Q)AXIS-B:UPDATE.PROC")
  field(SCAN, "1 second")
  field(PINI, "YES")
}

#======================================================
#
# STATUS
#
record(mbbi, "$(P)$(Q):STATUS") {
  field(DESC, "Pump Status")
  field(ZRVL, "0")
  field(ZRST, "Idle")
  field(ONVL, "1")
  field(ONST, "Infusing")
  field(TWVL, "2")
  field(TWST, "Withdrawing")
  field(THVL, "3")
  field(THST, "Stalled")
  field(FRVL, "4")
  field(FRST, "Target Reached")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# FORCE
#
record(ao, "$(P)$(Q):FORCE") {
  field(DESC, "Force")
  field(DTYP, "stream")
  field(FLNK, "$(P)$(Q):FORCE:RBV")
  field(OUT, "@pump33dds.proto setForce($(P)$(Q)) $(PORT)")
  field(PREC, "0")
  field(EGU, "%")
  field(DRVH, "100")
  field(DRVL, "0")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(ai, "$(P)$(Q):FORCE:RBV") {
  field(DESC, "Force Readback")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto getForce($(P)$(Q)) $(PORT)")
  field(PREC, "0")
  field(EGU, "%")
  field(SDIS, "$(P)$(Q):DISABLE")
}

#======================================================
#
# TARGET TIME
#
record(ao, "$(P)$(Q):TTIME") {
  field(DESC, "Target Time")
  field(DTYP, "stream")
  field(FLNK, "$(P)$(Q):TTIME:RBV")
  field(OUT, "@pump33dds.proto setTargetTime($(P)$(Q)) $(PORT)")
  field(EGU, "seconds")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(stringin, "$(P)$(Q):TTIME:RBV") {
  field(DESC, "Target Time Readback")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto getTargetTime($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# DIAMETER
#
record(ao, "$(P)$(Q):DIAMETER") {
  field(DESC, "Syringe Diameter")
  field(DTYP, "stream")
  field(FLNK, "$(P)$(Q):DIAMETER:RBV")
  field(OUT, "@pump33dds.proto setDiameter($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(EGU, "mm")
  field(DRVH, "100")
  field(DRVL, "0")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(ai, "$(P)$(Q):DIAMETER:RBV") {
  field(DESC, "Syringe Diameter Readback")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto getDiameter($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(EGU, "mm")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# INFUSE RATE
#
record(ao, "$(P)$(Q):IRATE") {
  field(DESC, "Infusion Rate")
  field(DTYP, "stream")
  field(FLNK, "$(P)$(Q):IRATE:RBV")
  field(OUT, "@pump33dds.proto setIRate($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(DRVH, "100000")
  field(DRVL, "0")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(ai, "$(P)$(Q):IRATE:RBV") {
  field(DESC, "Infusion Rate Readback")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto getIRate($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# INFUSE RATE UNIT
#
record(mbbo, "$(P)$(Q):IRATEUNITS") {
  field(ZRVL, "0")
  field(ZRST, "pl/sec")
  field(ONVL, "1")
  field(ONST, "pl/min")
  field(TWVL, "2")
  field(TWST, "pl/hr")
  field(THVL, "3")
  field(THST, "nl/sec")
  field(FRVL, "4")
  field(FRST, "nl/min")
  field(FVVL, "5")
  field(FVST, "nl/hr")
  field(SXVL, "6")
  field(SXST, "ul/sec")
  field(SVVL, "7")
  field(SVST, "ul/min")
  field(EIVL, "8")
  field(EIST, "ul/hr")
  field(NIVL, "9")
  field(NIST, "ml/sec")
  field(TEVL, "10")
  field(TEST, "ml/min")
  field(ELVL, "11")
  field(ELST, "ml/hr")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(mbbi, "$(P)$(Q):IRATEUNITS:RBV") {
  field(ZRVL, "0")
  field(ZRST, "pl/sec")
  field(ONVL, "1")
  field(ONST, "pl/min")
  field(TWVL, "2")
  field(TWST, "pl/hr")
  field(THVL, "3")
  field(THST, "nl/sec")
  field(FRVL, "4")
  field(FRST, "nl/min")
  field(FVVL, "5")
  field(FVST, "nl/hr")
  field(SXVL, "6")
  field(SXST, "ul/sec")
  field(SVVL, "7")
  field(SVST, "ul/min")
  field(EIVL, "8")
  field(EIST, "ul/hr")
  field(NIVL, "9")
  field(NIST, "ml/sec")
  field(TEVL, "10")
  field(TEST, "ml/min")
  field(ELVL, "11")
  field(ELST, "ml/hr")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# WITHDRAW RATE
#
record(ao, "$(P)$(Q):WRATE") {
  field(DESC, "Withdraw Rate")
  field(DTYP, "stream")
  field(FLNK, "$(P)$(Q):WRATE:RBV")
  field(OUT, "@pump33dds.proto setWRate($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(DRVH, "100000")
  field(DRVL, "0")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(ai, "$(P)$(Q):WRATE:RBV") {
  field(DESC, "Withdraw Rate Readback")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto getWRate($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# WITHDRAW RATE UNIT
#
record(mbbo, "$(P)$(Q):WRATEUNITS") {
  field(ZRVL, "0")
  field(ZRST, "pl/sec")
  field(ONVL, "1")
  field(ONST, "pl/min")
  field(TWVL, "2")
  field(TWST, "pl/hr")
  field(THVL, "3")
  field(THST, "nl/sec")
  field(FRVL, "4")
  field(FRST, "nl/min")
  field(FVVL, "5")
  field(FVST, "nl/hr")
  field(SXVL, "6")
  field(SXST, "ul/sec")
  field(SVVL, "7")
  field(SVST, "ul/min")
  field(EIVL, "8")
  field(EIST, "ul/hr")
  field(NIVL, "9")
  field(NIST, "ml/sec")
  field(TEVL, "10")
  field(TEST, "ml/min")
  field(ELVL, "11")
  field(ELST, "ml/hr")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(mbbi, "$(P)$(Q):WRATEUNITS:RBV") {
  field(ZRVL, "0")
  field(ZRST, "pl/sec")
  field(ONVL, "1")
  field(ONST, "pl/min")
  field(TWVL, "2")
  field(TWST, "pl/hr")
  field(THVL, "3")
  field(THST, "nl/sec")
  field(FRVL, "4")
  field(FRST, "nl/min")
  field(FVVL, "5")
  field(FVST, "nl/hr")
  field(SXVL, "6")
  field(SXST, "ul/sec")
  field(SVVL, "7")
  field(SVST, "ul/min")
  field(EIVL, "8")
  field(EIST, "ul/hr")
  field(NIVL, "9")
  field(NIST, "ml/sec")
  field(TEVL, "10")
  field(TEST, "ml/min")
  field(ELVL, "11")
  field(ELST, "ml/hr")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# INFUSED VOLUME
#
record(ai, "$(P)$(Q):IVOLUME:RBV") {
  field(DESC, "Infused Volume")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto ivolume($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# INFUSED VOLUME UNIT
#
record(mbbi, "$(P)$(Q):IVOLUMEUNITS:RBV") {
  field(ZRVL, "0")
  field(ZRST, "pl")
  field(ONVL, "1")
  field(ONST, "nl")
  field(TWVL, "2")
  field(TWST, "ul")
  field(THVL, "3")
  field(THST, "ml")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# CLEAR INFUSED VOLUME
#
record(bo, "$(P)$(Q):CLEARINFUSED") {
  field(DTYP, "stream")
  field(OUT, "@pump33dds.proto clear_infused($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# WITHDRAWN VOLUME
#
record(ai, "$(P)$(Q):WVOLUME:RBV") {
  field(DESC, "Withdrawn Volume")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto wvolume($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# WITHDRAWN VOLUME UNIT
#
record(mbbi, "$(P)$(Q):WVOLUMEUNITS:RBV") {
  field(ZRVL, "0")
  field(ZRST, "pl")
  field(ONVL, "1")
  field(ONST, "nl")
  field(TWVL, "2")
  field(TWST, "ul")
  field(THVL, "3")
  field(THST, "ml")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# CLEAR WITHDRAWN
#
record(bo, "$(P)$(Q):CLEARWITHDRAWN") {
  field(DTYP, "stream")
  field(OUT, "@pump33dds.proto clear_withdrawn($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# TARGET VOLUME
#
record(ao, "$(P)$(Q):TVOLUME") {
  field(DESC, "Target Volume")
  field(DTYP, "stream")
  field(FLNK, "$(P)$(Q):TVOLUME:RBV")
  field(OUT, "@pump33dds.proto setTVolume($(P)$(Q)) $(PORT)")
  field(PREC, "4")
  field(DRVH, "1000000")
  field(DRVL, "0")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(stringin, "$(P)$(Q):TVOLUME:RBV") {
  field(DESC, "Target Volume Readback")
  field(DTYP, "stream")
  field(INP, "@pump33dds.proto getTVolume($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# TARGET VOLUME UNIT
#
record(mbbo, "$(P)$(Q):TVOLUMEUNITS") {
  field(ZRVL, "0")
  field(ZRST, "pl")
  field(ONVL, "1")
  field(ONST, "nl")
  field(TWVL, "2")
  field(TWST, "ul")
  field(THVL, "3")
  field(THST, "ml")
  field(SDIS, "$(P)$(Q):DISABLE")
}

record(mbbi, "$(P)$(Q):TVOLUMEUNITS:RBV") {
  field(ZRVL, "0")
  field(ZRST, "pl")
  field(ONVL, "1")
  field(ONST, "nl")
  field(TWVL, "2")
  field(TWST, "ul")
  field(THVL, "3")
  field(THST, "ml")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# INFUSE RUN
#
record(bo, "$(P)$(Q):IRUN") {
  field(DESC, "Infuse")
  field(DTYP, "stream")
  field(OUT, "@pump33dds.proto infuse($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#
#======================================================
#
# WITHDRAW RUN
#
record(bo, "$(P)$(Q):WRUN") {
  field(DESC, "Withdraw")
  field(DTYP, "stream")
  field(OUT, "@pump33dds.proto withdraw($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#
#======================================================
#
# STOP
#
record(bo, "$(P)$(Q):STOP") {
  field(DESC, "Stop")
  field(DTYP, "stream")
  field(OUT, "@pump33dds.proto stop($(P)$(Q)) $(PORT)")
  field(SDIS, "$(P)$(Q):DISABLE")
}
#======================================================
